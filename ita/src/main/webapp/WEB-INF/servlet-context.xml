<?xml version="1.0" encoding="UTF-8"?>
<beans	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd     
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:default-servlet-handler />	
		
<!-- 	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">        
        <property name="maxUploadSize" value="100000" />
    </bean>
 -->
 
 	<!-- config load export excel -->
     <bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <property name="location" value="/WEB-INF/spring-excel-views.xml"/>
	   <property name="order" value="1" />
	</bean>
 
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
<!-- locale -->
   <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="fallbackToSystemLocale" value="false"></property>
	</bean>

	<!-- for cookie by client -->
	<!-- <bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="springmvcAppLocaleCookie" />
		<property name="cookieMaxAge" value="3600" />
	</bean> -->
	
	<!-- for session after login -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean> -->
	
	<!-- for session and modify or control this session - may be storing language on database -->
	<!-- value"=#{systemConfig.configMap[systemConfig.LANGUAGE_DEFAULT]}" -->
	<!-- use this I18nLocaleResolver to handle change locale and save to db, not use to setlocale after login success -->

	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>
<!-- end locale --> 
	
	<context:component-scan base-package="com.hlv.controller" />		
	
</beans>
